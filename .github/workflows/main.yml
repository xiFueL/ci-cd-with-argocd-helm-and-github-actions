name: Test, build, push Docker image and release Helm chart
on:
  push:
    branches: [main, master]
  workflow_dispatch:
jobs:
  perform_unit_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.0
      - uses: actions/setup-python@v4.7.0
        with:
          python-version: '3.10'
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      - run: pip install -r app/requirements.txt
      - run: python app/test_app.py
  build_and_push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: perform_unit_tests
    steps:
      - uses: actions/checkout@v4.1.0
      - run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - run: docker build -t ${{ secrets.DOCKER_USERNAME }}/ci-cd-with-argocd-helm-and-github-actions:latest -f app/Dockerfile app
      - run: docker push ${{ secrets.DOCKER_USERNAME }}/ci-cd-with-argocd-helm-and-github-actions:latest
  release_helm_chart:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.0
        with:
          fetch-depth: 0
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Install Helm
        uses: azure/setup-helm@v3.5
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_SKIP_EXISTING: true
